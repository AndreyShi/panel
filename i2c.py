from typing import Optional, Callable

# –£—Å–ª–æ–≤–Ω—ã–π –∏–º–ø–æ—Ä—Ç smbus2 —Å –∑–∞–≥–ª—É—à–∫–æ–π
try:
    # –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–π smbus2
    import smbus2
    HAS_REAL_HARDWARE = True
    print("‚úì –ù–∞—Å—Ç–æ—è—â–∏–π smbus2 –∑–∞–≥—Ä—É–∂–µ–Ω (Raspberry Pi)")
except ImportError:
    # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è Windows –∏ –¥—Ä—É–≥–∏—Ö —Å–∏—Å—Ç–µ–º
    HAS_REAL_HARDWARE = False
    print("‚ö† smbus2 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —ç–º—É–ª—è—Ü–∏—è")
    
    # –°–æ–∑–¥–∞–µ–º mock-–≤–µ—Ä—Å–∏—é smbus2
    class MockSMBus:
        def __init__(self, bus_number: int):
            self.bus_number = bus_number
            self.devices = {}  # –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ I2C
            print(f"üñ• MockSMBus: –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —à–∏–Ω–∞ {bus_number}")
        
        def write_byte_data(self, address: int, register: int, value: int):
            """–ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ"""
            device_key = f"dev_0x{address:02X}"
            if device_key not in self.devices:
                self.devices[device_key] = {}
            
            self.devices[device_key][register] = value
            print(f"üìù Mock –∑–∞–ø–∏—Å—å: –∞–¥—Ä–µ—Å 0x{address:02X}, —Ä–µ–≥–∏—Å—Ç—Ä 0x{register:02X}, –∑–Ω–∞—á–µ–Ω–∏–µ 0x{value:02X}")
        
        def read_byte_data(self, address: int, register: int) -> int:
            """–ò–º–∏—Ç–∞—Ü–∏—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞"""
            device_key = f"dev_0x{address:02X}"
            value = self.devices.get(device_key, {}).get(register, 0x00)
            print(f"üìñ Mock —á—Ç–µ–Ω–∏–µ: –∞–¥—Ä–µ—Å 0x{address:02X}, —Ä–µ–≥–∏—Å—Ç—Ä 0x{register:02X} ‚Üí 0x{value:02X}")
            return value
        
        def close(self):
            """–ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
            print("üîí MockSMBus: —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")
    
    # –°–æ–∑–¥–∞–µ–º mock-–º–æ–¥—É–ª—å smbus2
    class MockSMBusModule:
        def SMBus(self, bus_number: int):
            return MockSMBus(bus_number)
    
    smbus2 = MockSMBusModule()