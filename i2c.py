import time
import math

try:
    # –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–π smbus2
    import smbus2
    print("‚úì –ù–∞—Å—Ç–æ—è—â–∏–π smbus2 –∑–∞–≥—Ä—É–∂–µ–Ω (Raspberry Pi)")
    class i2c:
        def __init__(self, bus_number=1):
            self.bus = smbus2.SMBus(bus_number)
        def task_I2cbus(self, running):
            while running[0]:
                self.task_ADS1115()
                time.sleep(0.5)
        def task_ADS1115(self, address=0x48):            
            REG_CONVERSION = 0x00
            REG_CONFIG = 0x01
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            OS = 1        # –û–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
            # –î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–µ–∂–∏–º—ã:
            #MUX = 0b000  # AIN0 vs AIN1 (–¥–∏—Ñ—Ñ)
            #MUX = 0b001  # AIN0 vs AIN3 (–¥–∏—Ñ—Ñ)
            #MUX = 0b010  # AIN1 vs AIN3 (–¥–∏—Ñ—Ñ)
            #MUX = 0b011  # AIN2 vs AIN3 (–¥–∏—Ñ—Ñ)
            # Single-Ended —Ä–µ–∂–∏–º—ã:
            #MUX = 0b100  # AIN0 vs GND
            #MUX = 0b101  # AIN1 vs GND  
            #MUX = 0b110  # AIN2 vs GND
            #MUX = 0b111  # AIN3 vs GND
            MUX = 0b100   # AIN0 vs AIN1 
            # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã —É—Å–∏–ª–µ–Ω–∏—è
            #PGA_6_144V = 0b000   # ¬±6.144V
            #PGA_4_096V = 0b001   # ¬±4.096V  
            #PGA_2_048V = 0b010   # ¬±2.048V (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
            #PGA_1_024V = 0b011   # ¬±1.024V
            #PGA_0_512V = 0b100   # ¬±0.512V
            #PGA_0_256V = 0b101   # ¬±0.256V
            PGA = 0b010   # ¬±2.048V
            MODE = 1      # –û–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã–π —Ä–µ–∂–∏–º
            DR = 0b100    # 128 SPS
            COMP_MODE = 0 # –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–º–ø–∞—Ä–∞—Ç–æ—Ä
            COMP_POL = 0  # –ê–∫—Ç–∏–≤–Ω—ã–π –Ω–∏–∑–∫–∏–π
            COMP_LAT = 0  # –ù–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å
            COMP_QUE = 0b11 # –û—Ç–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø–∞—Ä–∞—Ç–æ—Ä
                
            config = (OS << 15) | (MUX << 12) | (PGA << 9) | (MODE << 8) | \
                        (DR << 5) | (COMP_MODE << 4) | (COMP_POL << 3) | \
                        (COMP_LAT << 2) | COMP_QUE
                
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            config_bytes = [config >> 8, config & 0xFF]
            self.bus.write_i2c_block_data(address, REG_CONFIG, config_bytes)
                
            # –û–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
            time.sleep(0.01)
                
            # –ß—Ç–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            result = self.bus.read_i2c_block_data(address, REG_CONVERSION, 2)
            value = (result[0] << 8) | result[1]
                
            # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ
            voltage = (value * 2.048) / 32767.0
            
            # –†–∞—Å—Å—á–µ—Ç –ø–æ–¥—Å–æ–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ  —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è –≤ —Å—Ö–µ–º–µ –¥–µ–ª–∏—Ç–µ–ª—è –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è
            R2 = 430 * (voltage/(3.3 - voltage))
            print(f"I2c value: {value}, voltage: {voltage:.2f}, R2: {R2:.2f}")
except ImportError:
    # –°–æ–∑–¥–∞–µ–º mock-–≤–µ—Ä—Å–∏—é smbus2
    class i2c:
        def __init__(self, bus_number=1):
            self.bus_number = bus_number
            self.devices = {}  # –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ I2C
            print(f"üñ• i2c: –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —à–∏–Ω–∞ {bus_number}")
        def task_I2cbus(self, running):
            while running[0]:
                self.task_ADS1115()
                time.sleep(1)
        def task_ADS1115(self, address=0x48):
                print(f"I2c value: {math.pi:.2f}, voltage: {math.pi:.2f}, R2: {math.pi:.2f}")